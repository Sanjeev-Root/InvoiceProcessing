<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>823,3048</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="96">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="833,2983" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="p7:DocumentTaxonomy" Name="Taxonomy" />
      <Variable x:TypeArguments="x:String" Name="DocText" />
      <Variable x:TypeArguments="p3:Document" Name="DOM" />
      <Variable x:TypeArguments="p5:ClassificationResult[]" Name="ClassificationResults" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="ExtractionResults" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="ValidationResults" />
      <Variable x:TypeArguments="sd1:DataSet" Name="DataSet" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="791,61" sap2010:WorkflowViewState.IdRef="WriteLine_1">
      <InArgument x:TypeArguments="x:String">
        <Literal x:TypeArguments="x:String" Value="" />
      </InArgument>
    </WriteLine>
    <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="791,103" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy]" />
    <p:DigitizeDocument DegreeOfParallelism="-1" DisplayName="Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[in_TransactionItem]" DocumentText="[DocText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="791,293" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
      <p:DigitizeDocument.OCREngine>
        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
          <ActivityFunc.Argument>
            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
          </ActivityFunc.Argument>
          <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_2" Image="[Image]" />
        </ActivityFunc>
      </p:DigitizeDocument.OCREngine>
    </p:DigitizeDocument>
    <p1:ClassifyDocumentScope ClassificationResults="[ClassificationResults]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[in_TransactionItem]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="791,434" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI6c51831ac7a74e739a6086669fc04317&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Invoices.Billing.Sanjeev&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Billing.Sanjeev&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI6c51831ac7a74e739a6086669fc04317&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI6c51831ac7a74e739a6086669fc04317&quot;:[]}}">
      <p1:ClassifyDocumentScope.Classifiers>
        <p1:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="234,113" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="Data\Temp\Learning.json" PersistenceId="UI6c51831ac7a74e739a6086669fc04317">
          <p1:KeywordBasedClassifier.ClassifierResult>
            <OutArgument x:TypeArguments="p2:ClassifierResult">
              <DelegateArgumentReference x:TypeArguments="p2:ClassifierResult">
                <DelegateOutArgument x:TypeArguments="p2:ClassifierResult" Name="ClassificationResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p1:KeywordBasedClassifier.ClassifierResult>
          <p1:KeywordBasedClassifier.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentObjectModel>
          <p1:KeywordBasedClassifier.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentPath>
          <p1:KeywordBasedClassifier.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentText>
          <p1:KeywordBasedClassifier.DocumentTypes>
            <InArgument x:TypeArguments="p2:ClassifierDocumentType[]">
              <DelegateArgumentValue x:TypeArguments="p2:ClassifierDocumentType[]">
                <DelegateInArgument x:TypeArguments="p2:ClassifierDocumentType[]" Name="DocumentTypes" />
              </DelegateArgumentValue>
            </InArgument>
          </p1:KeywordBasedClassifier.DocumentTypes>
        </p1:KeywordBasedClassifier>
      </p1:ClassifyDocumentScope.Classifiers>
    </p1:ClassifyDocumentScope>
    <p4:DataExtractionScope DocumentTypeId="{x:Null}" ClassificationResult="[ClassificationResults.First]" DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[in_TransactionItem]" DocumentText="[DocText]" ExtractionResult="[ExtractionResults]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="791,482" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI8645908b43ee4cfcb9adb5f0bd081d6c&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Invoices.Billing.Sanjeev&quot;:{&quot;FieldMappings&quot;:{&quot;Invoices.Billing.Sanjeev.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Invoices.Billing.Sanjeev.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;&quot;,&quot;ShouldExtract&quot;:false},&quot;Invoices.Billing.Sanjeev.Invoicedate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Invoices.Billing.Sanjeev.Invoicedate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;Invoices.Billing.Sanjeev.CompanyName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Invoices.Billing.Sanjeev.CompanyName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;Invoices.Billing.Sanjeev.TotalValue&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Invoices.Billing.Sanjeev.TotalValue&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI8645908b43ee4cfcb9adb5f0bd081d6c&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI8645908b43ee4cfcb9adb5f0bd081d6c&quot;:[]}}">
      <p4:DataExtractionScope.Extractors>
        <p4:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="[in_Config(&quot;API_key&quot;).ToString]" DisplayName="Form Extractor" Endpoint="[in_Config(&quot;DU_endpoint&quot;).ToString]" sap:VirtualizedContainerService.HintSize="234,161" sap2010:WorkflowViewState.IdRef="FormExtractor_1" MinOverlapPercentage="65" PersistenceId="UI8645908b43ee4cfcb9adb5f0bd081d6c" SerializedSettings="{}{}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;Invoices.Billing.Sanjeev&quot;,&quot;FormId&quot;:&quot;a677733b&quot;,&quot;FormName&quot;:&quot;SampleInvoice&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;INVOICE&quot;,&quot;Box&quot;:[48.0,53.76,213.12,40.32]},{&quot;Text&quot;:&quot;Invoice&quot;,&quot;Box&quot;:[107.04,54.96,33.6,7.2]},{&quot;Text&quot;:&quot;Date&quot;,&quot;Box&quot;:[107.04,185.76,20.64,7.2]},{&quot;Text&quot;:&quot;Billed&quot;,&quot;Box&quot;:[158.16,54.72,25.92,7.2]},{&quot;Text&quot;:&quot;Description&quot;,&quot;Box&quot;:[268.56,54.72,54.24,9.12]},{&quot;Text&quot;:&quot;Amount&quot;,&quot;Box&quot;:[268.56,520.08,37.9199,7.2]},{&quot;Text&quot;:&quot;Discount&quot;,&quot;Box&quot;:[512.64,456.0,42.0,7.2]},{&quot;Text&quot;:&quot;total&quot;,&quot;Box&quot;:[610.32,445.2,20.4,7.2]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;Invoices.Billing.Sanjeev.InvoiceNumber&quot;,&quot;Box&quot;:[119.3653,54.6248,38.4397,14.162]},{&quot;Field&quot;:&quot;Invoices.Billing.Sanjeev.Invoicedate&quot;,&quot;Box&quot;:[116.3306,178.0364,73.8446,20.2314]},{&quot;Field&quot;:&quot;Invoices.Billing.Sanjeev.CompanyName&quot;,&quot;Box&quot;:[147.6893,178.0364,84.9719,20.2314]},{&quot;Field&quot;:&quot;Invoices.Billing.Sanjeev.TotalValue&quot;,&quot;Box&quot;:[591.7686,468.357,112.2843,41.4744]}],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}}]" Timeout="100000">
          <p4:FormExtractor.DocumentBounds>
            <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
              <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentBounds>
          <p4:FormExtractor.DocumentObjectModel>
            <InArgument x:TypeArguments="p3:Document">
              <DelegateArgumentValue x:TypeArguments="p3:Document">
                <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentObjectModel>
          <p4:FormExtractor.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentPath>
          <p4:FormExtractor.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.DocumentText>
          <p4:FormExtractor.ExtractorDocumentType>
            <InArgument x:TypeArguments="p6:ExtractorDocumentType">
              <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:FormExtractor.ExtractorDocumentType>
          <p4:FormExtractor.ExtractorResult>
            <OutArgument x:TypeArguments="p6:ExtractorResult">
              <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p4:FormExtractor.ExtractorResult>
        </p4:FormExtractor>
      </p4:DataExtractionScope.Extractors>
    </p4:DataExtractionScope>
    <p:PresentValidationStation AutomaticExtractionResults="[ExtractionResults]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="[in_TransactionItem]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="791,365" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" Taxonomy="[Taxonomy]" ValidatedExtractionResults="[ValidationResults]" />
    <p4:ExportExtractionResults DataSet="[DataSet]" DisplayName="Export Extraction Results" ExtractionResult="[ValidationResults]" sap:VirtualizedContainerService.HintSize="791,173" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False" />
    <ui:ForEach x:TypeArguments="sd1:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="791,628" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[DataSet.Tables]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd1:DataTable">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd1:DataTable" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="755,494" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="isPathExits" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:PathExists DisplayName="Path Exists" Exists="[isPathExits]" sap:VirtualizedContainerService.HintSize="713,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[in_Config(&quot;OutputFolder&quot;).ToString]" PathType="File" />
            <If Condition="[isPathExits]" sap:VirtualizedContainerService.HintSize="713,273" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:AppendRange DataTable="[item]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="[item.TableName]" WorkbookPath="[in_Config(&quot;OutputFolder&quot;).ToString]" />
              </If.Then>
              <If.Else>
                <ui:WriteRange AddHeaders="True" DataTable="[item]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[item.TableName]" StartingCell="A1" WorkbookPath="[in_Config(&quot;OutputFolder&quot;).ToString]" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>